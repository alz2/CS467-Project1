{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rajeev Ranjan\\\\Desktop\\\\Spring 2019\\\\CS 467\\\\CS467-Project1\\\\frontend_react\\\\src\\\\MessageDrops.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { humanizeDate } from './utils.js';\nimport * as eventDrops from 'event-drops';\n\nvar MessageDrops =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageDrops, _Component);\n\n  function MessageDrops(props) {\n    var _this;\n\n    _classCallCheck(this, MessageDrops);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageDrops).call(this, props));\n\n    _this.updateCommitsInformation = function (chart) {\n      var filteredData = chart.filteredData().reduce(function (total, repo) {\n        return total.concat(repo.data);\n      }, []); //numberCommitsContainer.textContent = filteredData.length;\n      //zoomStart.textContent = humanizeDate(chart.scale().domain()[0]);\n      //zoomEnd.textContent = humanizeDate(chart.scale().domain()[1]);\n    };\n\n    _this.createMessageDrops = _this.createMessageDrops.bind(_assertThisInitialized(_this)); //console.log(props.data);\n\n    return _this;\n  }\n\n  _createClass(MessageDrops, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createMessageDrops();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.createMessageDrops();\n    }\n  }, {\n    key: \"createMessageDrops\",\n    value: function createMessageDrops() {\n      var _this2 = this;\n\n      var node = this.node;\n      var repositoriesData = this.props.data.map(function (repository) {\n        return {\n          name: repository.name,\n          data: repository.commits\n        };\n      });\n      console.log(\"createMessageDrops\");\n      console.log(repositoriesData);\n      var tooltip = d3.select('body').append('div').classed('tooltip', true).style('opacity', 0).style('pointer-events', 'auto');\n      var chart = eventDrops({\n        d3: d3,\n        zoom: {\n          onZoomEnd: function onZoomEnd() {\n            return _this2.updateCommitsInformation(chart);\n          }\n        },\n        drop: {\n          date: function date(d) {\n            return new Date(d.date);\n          },\n          onMouseOver: function onMouseOver(commit) {\n            tooltip.transition().duration(200).style('opacity', 1).style('pointer-events', 'auto');\n            tooltip.html(\"\\n                    <div class=\\\"commit\\\">\\n                    <div class=\\\"content\\\">\\n                        <h3 class=\\\"message\\\">\".concat(commit.message, \"</h3>\\n                        <p>\\n                            <a href=\\\"https://www.github.com/\").concat(commit.author.name, \"\\\" class=\\\"author\\\">\").concat(commit.author.name, \"</a>\\n                            on <span class=\\\"date\\\">\").concat(humanizeDate(new Date(commit.date)), \"</span> -\\n                            <a class=\\\"sha\\\" href=\\\"\").concat(commit.sha, \"\\\">\").concat(commit.sha.substr(0, 10), \"</a>\\n                        </p>\\n                    </div>\\n                \")).style('left', \"\".concat(d3.event.pageX - 30, \"px\")).style('top', \"\".concat(d3.event.pageY + 20, \"px\"));\n          },\n          onMouseOut: function onMouseOut() {\n            tooltip.transition().duration(500).style('opacity', 0).style('pointer-events', 'none');\n          }\n        }\n      });\n      d3.select(node).data([repositoriesData]).call(chart);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"render\");\n      console.log(this.props.data);\n\n      if (this.props.data == null) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \" Loading... \");\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          width: \"90%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"infos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Info\"), React.createElement(\"svg\", {\n        ref: function ref(node) {\n          return _this3.node = node;\n        },\n        width: \"auto\",\n        height: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return MessageDrops;\n}(Component);\n\nexport default MessageDrops;","map":{"version":3,"sources":["C:\\Users\\Rajeev Ranjan\\Desktop\\Spring 2019\\CS 467\\CS467-Project1\\frontend_react\\src\\MessageDrops.js"],"names":["React","Component","d3","humanizeDate","eventDrops","MessageDrops","props","updateCommitsInformation","chart","filteredData","reduce","total","repo","concat","data","createMessageDrops","bind","node","repositoriesData","map","repository","name","commits","console","log","tooltip","select","append","classed","style","zoom","onZoomEnd","drop","date","d","Date","onMouseOver","commit","transition","duration","html","message","author","sha","substr","event","pageX","pageY","onMouseOut","call","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport * as d3 from 'd3'\r\nimport {humanizeDate} from './utils.js'\r\nimport * as eventDrops from 'event-drops'\r\n\r\n\r\nclass MessageDrops extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createMessageDrops = this.createMessageDrops.bind(this);\r\n        //console.log(props.data);\r\n    }\r\n\r\n    updateCommitsInformation = chart => {\r\n        const filteredData = chart\r\n            .filteredData()\r\n            .reduce((total, repo) => total.concat(repo.data), []);\r\n\r\n        //numberCommitsContainer.textContent = filteredData.length;\r\n        //zoomStart.textContent = humanizeDate(chart.scale().domain()[0]);\r\n        //zoomEnd.textContent = humanizeDate(chart.scale().domain()[1]);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.createMessageDrops()\r\n    }\r\n    componentDidUpdate() {\r\n        this.createMessageDrops()\r\n    }\r\n\r\n    createMessageDrops() {\r\n\r\n        const node = this.node;\r\n\r\n        const repositoriesData = this.props.data.map(repository => ({\r\n            name: repository.name,\r\n            data: repository.commits,\r\n        }));\r\n\r\n        console.log(\"createMessageDrops\");\r\n        console.log(repositoriesData)\r\n\r\n        const tooltip = d3\r\n            .select('body')\r\n            .append('div')\r\n            .classed('tooltip', true)\r\n            .style('opacity', 0)\r\n            .style('pointer-events', 'auto');\r\n\r\n        const chart = eventDrops({\r\n            d3,\r\n            zoom: {\r\n                onZoomEnd: () => this.updateCommitsInformation(chart),\r\n            },\r\n            drop: {\r\n                date: d => new Date(d.date),\r\n                onMouseOver: commit => {\r\n                    tooltip\r\n                        .transition()\r\n                        .duration(200)\r\n                        .style('opacity', 1)\r\n                        .style('pointer-events', 'auto');\r\n\r\n                    tooltip\r\n                        .html(\r\n                            `\r\n                    <div class=\"commit\">\r\n                    <div class=\"content\">\r\n                        <h3 class=\"message\">${commit.message}</h3>\r\n                        <p>\r\n                            <a href=\"https://www.github.com/${\r\n                                commit.author.name\r\n                            }\" class=\"author\">${commit.author.name}</a>\r\n                            on <span class=\"date\">${humanizeDate(\r\n                                new Date(commit.date)\r\n                            )}</span> -\r\n                            <a class=\"sha\" href=\"${\r\n                                commit.sha\r\n                            }\">${commit.sha.substr(0, 10)}</a>\r\n                        </p>\r\n                    </div>\r\n                `\r\n                        )\r\n                        .style('left', `${d3.event.pageX - 30}px`)\r\n                        .style('top', `${d3.event.pageY + 20}px`);\r\n                },\r\n                onMouseOut: () => {\r\n                    tooltip\r\n                        .transition()\r\n                        .duration(500)\r\n                        .style('opacity', 0)\r\n                        .style('pointer-events', 'none');\r\n                },\r\n            },\r\n        });\r\n\r\n        d3\r\n            .select(node)\r\n            .data([repositoriesData])\r\n            .call(chart);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\");\r\n        console.log(this.props.data);\r\n        if (this.props.data == null) {\r\n            return (<h1> Loading... </h1>);\r\n        }\r\n        return (\r\n            <div style={{width:\"90%\"}}>\r\n            <p className=\"infos\">Info</p>\r\n            <svg ref={node => this.node = node} width=\"auto\" height=\"auto\"></svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageDrops\r\n"]},"metadata":{},"sourceType":"module"}